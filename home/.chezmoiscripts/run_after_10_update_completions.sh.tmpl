#!/usr/bin/env bash
{{- $shells := .shells }}
{{- $completions := .shell_completions }}
{{- $plugins := .shell_plugins }}
{{- $shell_default := .shell_default }}

set -eo pipefail
echo "SHELL | Start shell completions and plugin installation"

CONFIG_DIR=${XDG_CONFIG_HOME:-"~/.config"}
echo "SHELL | Using ${CONFIG_DIR} as configuration directory"

echo "SHELL | Generating shell completions"
{{ range $shell := $shells}}
mkdir -p "$CONFIG_DIR"/{{ $shell }}/completions
mkdir -p "$CONFIG_DIR"/{{ $shell }}/plugins
{{ end }}
# Generate completions
{{ range $key, $value := $completions -}}
{{ range $shell := $shells -}}
{{ $key }} {{ $value.args }} {{ $shell }} > "$CONFIG_DIR"/{{ $shell }}/completions/_{{ $key }}.sh
{{ end }}
{{ end -}}
echo "SHELL | Completions generation finished"

# Generate plugin files, like activations etc.
echo "SHELL | Install shell plugins"
{{ range $key, $value := $plugins -}}
{{ range $shell := $shells -}}
{{ $key }} {{ $value.args }} {{ $shell }} > "$CONFIG_DIR"/{{ $shell }}/plugins/{{$key}}_generated.sh
{{ end }}
{{ end -}}
echo "SHELL | Plugin installation finished"

echo "SHELL | Running 'compinit' to initialize completions"
if [[ -f "$XDG_STATE_HOME/zsh/zcompdump" ]]; then
  rm -f "$XDG_STATE_HOME/zsh/zcompdump"
fi
# Rerun compinit
zsh -c 'autoload -Uz compinit && compinit'

{{/* Set the default shell if shell_default is not none */}}
{{ if .set_default_shell -}}
  echo "SHELL | Get current configured default shell"
  {{ if eq .chezmoi.os "darwin" -}}
    CURRENT_SHELL=$(basename $(dscl . -read /Users/"$USER" UserShell | awk '{print $2}'))
  {{ else if  eq .chezmoi.os "linux" -}}
    CURRENT_SHELL=$(basename $(cat /etc/passwd | grep "^${USER:-root}" | cut -d ":" -f 7))
  {{ end -}}
  echo "SHELL | Current default shell $CURRENT_SHELL"

  if [ "$CURRENT_SHELL" != "{{ $shell_default }}"]; then
    echo "SHELL | Set default shell to {{ $shell_default }}"
    chsh -s "{{ $shell_default }}"
  else
    echo "SHELL | Default shell already set to {{ $shell_default }}"
  fi
{{ end -}}
